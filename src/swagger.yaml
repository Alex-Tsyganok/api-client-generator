---
  swagger: "2.0"
  info: 
    version: "0.0.1"
    title: "Swagger"
    description: "All services\n"
  host: "host"
  basePath: "/"
  schemes: 
    - "http"
    - "https"
  consumes: 
    - "application/json"
  produces: 
    - "application/json"
  tags: []
  definitions: 
    authCredentials: 
      type: "object"
      properties: 
        email: 
          type: "string"
        password: 
          type: "string"
    authEmptyResponse: 
      type: "object"
    authToken: 
      type: "object"
      properties: 
        token: 
          type: "string"
    authUser: 
      type: "object"
      properties: 
        userId: 
          type: "string"
        firstName: 
          type: "string"
        lastName: 
          type: "string"
        email: 
          type: "string"
        phone: 
          type: "string"
        avatar: 
          type: "string"
        alias: 
          type: "string"
        userRole: 
          $ref: "#/definitions/authUserRole"
        state: 
          type: "string"
    authUserInfo: 
      type: "object"
      properties: 
        userID: 
          type: "string"
        email: 
          type: "string"
    authUserRole: 
      type: "string"
      enum: 
        - "NONE"
        - "TRAINER"
        - "OWNER"
        - "VETERINARY"
        - "FRIEND"
        - "SPONSOR"
        - "RIDER"
        - "HORSEKEEPER"
        - "ADMIN"
      default: "NONE"
    authVersion: 
      type: "object"
      properties: 
        name: 
          type: "string"
        stability: 
          type: "string"
    protobufEmpty: 
      type: "object"
      description: "service Foo {\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\n    }\n\nThe JSON representation for `Empty` is empty JSON object `{}`."
      title: "A generic empty message that you can re-use to avoid defining duplicated\nempty messages in your APIs. A typical example is to use it as the request\nor the response type of an API method. For instance:"
    calendarEvent: 
      type: "object"
      properties: 
        id: 
          type: "string"
        dateStart: 
          type: "string"
          format: "int64"
        dateEnd: 
          type: "string"
          format: "int64"
        allDay: 
          type: "boolean"
          format: "boolean"
        repeating: 
          type: "boolean"
          format: "boolean"
        repeatingTime: 
          type: "string"
        eventType: 
          $ref: "#/definitions/calendarEventType"
        place: 
          type: "string"
        rider: 
          type: "string"
        comment: 
          type: "string"
        horseID: 
          type: "string"
        sharings: 
          type: "array"
          items: 
            $ref: "#/definitions/calendarEventSharing"
    calendarEventSharing: 
      type: "object"
      properties: 
        id: 
          type: "string"
        eventId: 
          type: "string"
        userID: 
          type: "string"
        role: 
          $ref: "#/definitions/calendarEventSharingRole"
    calendarEventSharingList: 
      type: "object"
      properties: 
        data: 
          type: "array"
          items: 
            $ref: "#/definitions/calendarEventSharing"
        paging: 
          $ref: "#/definitions/calendarPaging"
    calendarEventSharingRole: 
      type: "string"
      enum: 
        - "OWNER"
        - "OTHERS"
      default: "OWNER"
    calendarEventType: 
      type: "string"
      enum: 
        - "NONE"
        - "TRAINING"
        - "LONGING"
        - "WALKER"
        - "JUMPING"
        - "OTHER"
      default: "NONE"
    calendarEvents: 
      type: "object"
      properties: 
        data: 
          type: "array"
          items: 
            $ref: "#/definitions/calendarEvent"
    calendarPaging: 
      type: "object"
      properties: 
        start: 
          type: "string"
          format: "uint64"
        number: 
          type: "string"
          format: "uint64"
    calendarVersion: 
      type: "object"
      properties: 
        name: 
          type: "string"
        stability: 
          type: "string"
    discussionDiscussion: 
      type: "object"
      properties: 
        id: 
          type: "string"
        parentId: 
          type: "string"
        authorId: 
          type: "string"
        authorName: 
          type: "string"
        date: 
          type: "string"
        entityId: 
          type: "string"
        type: 
          type: "string"
        message: 
          type: "string"
        subject: 
          type: "string"
        comments: 
          type: "array"
          items: 
            $ref: "#/definitions/discussionDiscussion"
        updatedAt: 
          type: "string"
        stared: 
          type: "boolean"
          format: "boolean"
    discussionVersion: 
      type: "object"
      properties: 
        name: 
          type: "string"
        stability: 
          type: "string"
    horseActivity: 
      type: "object"
      properties: 
        id: 
          type: "string"
        intensity: 
          type: "integer"
          format: "int32"
        type: 
          $ref: "#/definitions/horseTrainingType"
        horseID: 
          type: "string"
        startDate: 
          type: "string"
          format: "int64"
        endDate: 
          type: "string"
          format: "int64"
    horseActivityList: 
      type: "object"
      properties: 
        data: 
          type: "array"
          items: 
            $ref: "#/definitions/horseActivity"
        paging: 
          $ref: "#/definitions/horsePaging"
    horseFoodDosage: 
      type: "object"
      properties: 
        id: 
          type: "string"
        title: 
          type: "string"
        amount: 
          type: "integer"
          format: "int32"
        type: 
          type: "string"
        horseID: 
          type: "string"
    horseFoodDosages: 
      type: "object"
      properties: 
        foodDosage: 
          type: "array"
          items: 
            $ref: "#/definitions/horseFoodDosage"
    horseHorse: 
      type: "object"
      properties: 
        id: 
          type: "string"
        name: 
          type: "string"
        state: 
          type: "string"
        feiId: 
          type: "string"
        ueln: 
          type: "string"
        chipId: 
          type: "string"
        breed: 
          type: "string"
        height: 
          type: "number"
          format: "double"
        length: 
          type: "number"
          format: "double"
        girth: 
          type: "number"
          format: "double"
        age: 
          type: "string"
          format: "int64"
        sex: 
          type: "string"
        weight: 
          type: "number"
          format: "double"
        origin: 
          type: "string"
        color: 
          type: "string"
        father: 
          $ref: "#/definitions/horseHorse"
        mother: 
          $ref: "#/definitions/horseHorse"
        breeder: 
          type: "string"
        photo: 
          type: "string"
        birthDate: 
          type: "string"
        pedigree: 
          type: "string"
        nationalId: 
          type: "string"
        license: 
          type: "string"
        sharings: 
          type: "array"
          items: 
            $ref: "#/definitions/horseHorseSharing"
        trainings: 
          type: "array"
          items: 
            $ref: "#/definitions/horseTraining"
        foodDosages: 
          type: "array"
          items: 
            $ref: "#/definitions/horseFoodDosage"
    horseHorseList: 
      type: "object"
      properties: 
        data: 
          type: "array"
          items: 
            $ref: "#/definitions/horseHorse"
        paging: 
          $ref: "#/definitions/horsePaging"
    horseHorseSharing: 
      type: "object"
      properties: 
        id: 
          type: "string"
        horseID: 
          type: "string"
        userID: 
          type: "string"
        firstName: 
          type: "string"
        lastName: 
          type: "string"
        avatar: 
          type: "string"
        role: 
          $ref: "#/definitions/horseHorseSharingRole"
    horseHorseSharingList: 
      type: "object"
      properties: 
        data: 
          type: "array"
          items: 
            $ref: "#/definitions/horseHorseSharing"
        paging: 
          $ref: "#/definitions/horsePaging"
    horseHorseSharingRequest: 
      type: "object"
      properties: 
        email: 
          type: "string"
        horseID: 
          type: "string"
        horseSharingRole: 
          $ref: "#/definitions/horseHorseSharingRole"
    horseHorseSharingRole: 
      type: "string"
      enum: 
        - "NONE"
        - "TRAINER"
        - "OWNER"
        - "VETERINARY"
        - "FRIEND"
        - "SPONSOR"
        - "RIDER"
        - "HORSEKEEPER"
        - "ADMIN"
      default: "NONE"
    horsePaging: 
      type: "object"
      properties: 
        start: 
          type: "string"
          format: "uint64"
        number: 
          type: "string"
          format: "uint64"
    horseTraining: 
      type: "object"
      properties: 
        id: 
          type: "string"
        horseID: 
          type: "string"
        userId: 
          type: "string"
          format: "int64"
        length: 
          type: "string"
          format: "int64"
        distance: 
          type: "string"
          format: "int64"
        maxSpeed: 
          type: "string"
          format: "int64"
        averageSpeed: 
          type: "string"
          format: "int64"
        maxPulse: 
          type: "string"
          format: "int64"
        averagePulse: 
          type: "string"
          format: "int64"
        burntCalories: 
          type: "string"
          format: "int64"
        start: 
          type: "string"
        end: 
          type: "string"
        weather: 
          type: "string"
        temperature: 
          type: "string"
          format: "int64"
        location: 
          type: "string"
        training_data: 
          type: "array"
          items: 
            $ref: "#/definitions/horseTrainingData"
    horseTrainingData: 
      type: "object"
      properties: 
        time: 
          type: "string"
          format: "int64"
        x: 
          type: "number"
          format: "double"
        y: 
          type: "number"
          format: "double"
        z: 
          type: "number"
          format: "double"
    horseTrainingDataList: 
      type: "object"
      properties: 
        totalElements: 
          type: "string"
          format: "int64"
        totalPages: 
          type: "string"
          format: "int64"
        numberOfElements: 
          type: "string"
          format: "int64"
        data: 
          type: "array"
          items: 
            $ref: "#/definitions/horseTrainingData"
    horseTrainingList: 
      type: "object"
      properties: 
        totalElements: 
          type: "string"
          format: "int64"
        totalPages: 
          type: "string"
          format: "int64"
        numberOfElements: 
          type: "string"
          format: "int64"
        last: 
          type: "boolean"
          format: "boolean"
        content: 
          type: "array"
          items: 
            $ref: "#/definitions/horseTraining"
    horseTrainingType: 
      type: "string"
      enum: 
        - "OTHER"
      default: "OTHER"
      title: "- OTHER: @vmasek please add"
    horseVersion: 
      type: "object"
      properties: 
        name: 
          type: "string"
        stability: 
          type: "string"
  paths: 
    /auth/login: 
      post: 
        operationId: "Login"
        responses: 
          200: 
            description: ""
            schema: 
              $ref: "#/definitions/authToken"
        parameters: 
          - 
            name: "body"
            in: "body"
            required: true
            schema: 
              $ref: "#/definitions/authCredentials"
        tags: 
          - "AuthService"
    /auth/users: 
      post: 
        operationId: "CreateUser"
        responses: 
          200: 
            description: ""
            schema: 
              $ref: "#/definitions/authUser"
        parameters: 
          - 
            name: "body"
            in: "body"
            required: true
            schema: 
              $ref: "#/definitions/authUser"
        tags: 
          - "AuthService"
    /auth/users/email/{email}: 
      get: 
        operationId: "GetUserByEmail"
        responses: 
          200: 
            description: ""
            schema: 
              $ref: "#/definitions/authUser"
        parameters: 
          - 
            name: "email"
            in: "path"
            required: true
            type: "string"
        tags: 
          - "AuthService"
    /auth/users/id/{id}: 
      get: 
        operationId: "GetUserByID"
        responses: 
          200: 
            description: ""
            schema: 
              $ref: "#/definitions/authUser"
        parameters: 
          - 
            name: "id"
            in: "path"
            required: true
            type: "string"
        tags: 
          - "AuthService"
    /auth/users/me: 
      get: 
        operationId: "GetCurrentUser"
        responses: 
          200: 
            description: ""
            schema: 
              $ref: "#/definitions/authUser"
        tags: 
          - "AuthService"
    /auth/users/me/validate: 
      delete: 
        operationId: "ValidateUser"
        responses: 
          200: 
            description: ""
            schema: 
              $ref: "#/definitions/authUserInfo"
        tags: 
          - "AuthService"
    /auth/users/{id}: 
      delete: 
        operationId: "DeleteUser"
        responses: 
          200: 
            description: ""
            schema: 
              $ref: "#/definitions/protobufEmpty"
        parameters: 
          - 
            name: "id"
            in: "path"
            required: true
            type: "string"
        tags: 
          - "AuthService"
    /auth/users/{userId}: 
      put: 
        operationId: "EditUser"
        responses: 
          200: 
            description: ""
            schema: 
              $ref: "#/definitions/authUser"
        parameters: 
          - 
            name: "userId"
            in: "path"
            required: true
            type: "string"
          - 
            name: "body"
            in: "body"
            required: true
            schema: 
              $ref: "#/definitions/authUser"
        tags: 
          - "AuthService"
    /auth/version: 
      get: 
        operationId: "GetVersion"
        responses: 
          200: 
            description: ""
            schema: 
              $ref: "#/definitions/authVersion"
        tags: 
          - "AuthService"
    /calendar/create: 
      post: 
        operationId: "CreateEvent"
        responses: 
          200: 
            description: ""
            schema: 
              $ref: "#/definitions/calendarEvent"
        parameters: 
          - 
            name: "body"
            in: "body"
            required: true
            schema: 
              $ref: "#/definitions/calendarEvent"
        tags: 
          - "CalendarService"
    /calendar/eventSharing: 
      post: 
        operationId: "CreateEventSharing"
        responses: 
          200: 
            description: ""
            schema: 
              $ref: "#/definitions/calendarEventSharing"
        parameters: 
          - 
            name: "body"
            in: "body"
            required: true
            schema: 
              $ref: "#/definitions/calendarEventSharing"
        tags: 
          - "CalendarService"
    /calendar/eventSharing/event/{id}: 
      get: 
        operationId: "GetEventSharingByEventID"
        responses: 
          200: 
            description: ""
            schema: 
              $ref: "#/definitions/calendarEventSharingList"
        parameters: 
          - 
            name: "id"
            in: "path"
            required: true
            type: "string"
        tags: 
          - "CalendarService"
    /calendar/eventSharing/user/{id}: 
      get: 
        operationId: "GetEventSharingByUserID"
        responses: 
          200: 
            description: ""
            schema: 
              $ref: "#/definitions/calendarEventSharingList"
        parameters: 
          - 
            name: "id"
            in: "path"
            required: true
            type: "string"
        tags: 
          - "CalendarService"
    /calendar/eventSharing/{id}: 
      delete: 
        operationId: "DeleteEventSharing"
        responses: 
          200: 
            description: ""
            schema: 
              $ref: "#/definitions/protobufEmpty"
        parameters: 
          - 
            name: "id"
            in: "path"
            required: true
            type: "string"
        tags: 
          - "CalendarService"
    /calendar/list: 
      get: 
        operationId: "GetEvents"
        responses: 
          200: 
            description: ""
            schema: 
              $ref: "#/definitions/calendarEvents"
        parameters: 
          - 
            name: "from"
            in: "query"
            required: false
            type: "string"
            format: "int64"
          - 
            name: "to"
            in: "query"
            required: false
            type: "string"
            format: "int64"
          - 
            name: "horseID"
            in: "query"
            required: false
            type: "string"
        tags: 
          - "CalendarService"
    /calendar/version: 
      get: 
        operationId: "GetVersion"
        responses: 
          200: 
            description: ""
            schema: 
              $ref: "#/definitions/calendarVersion"
        tags: 
          - "CalendarService"
    /calendar/{id}: 
      get: 
        operationId: "GetEventByID"
        responses: 
          200: 
            description: ""
            schema: 
              $ref: "#/definitions/calendarEvent"
        parameters: 
          - 
            name: "id"
            in: "path"
            required: true
            type: "string"
        tags: 
          - "CalendarService"
      delete: 
        operationId: "DeleteEvent"
        responses: 
          200: 
            description: ""
            schema: 
              $ref: "#/definitions/protobufEmpty"
        parameters: 
          - 
            name: "id"
            in: "path"
            required: true
            type: "string"
        tags: 
          - "CalendarService"
      put: 
        operationId: "UpdateEvent"
        responses: 
          200: 
            description: ""
            schema: 
              $ref: "#/definitions/calendarEvent"
        parameters: 
          - 
            name: "id"
            in: "path"
            required: true
            type: "string"
          - 
            name: "body"
            in: "body"
            required: true
            schema: 
              $ref: "#/definitions/calendarEvent"
        tags: 
          - "CalendarService"
    /discussion/create: 
      post: 
        operationId: "CreateDiscussion"
        responses: 
          200: 
            description: ""
            schema: 
              $ref: "#/definitions/discussionDiscussion"
        parameters: 
          - 
            name: "body"
            in: "body"
            required: true
            schema: 
              $ref: "#/definitions/discussionDiscussion"
        tags: 
          - "DiscussionService"
    /discussion/list/{id}: 
      get: 
        operationId: "GetDiscussion"
        responses: 
          200: 
            description: ""
            schema: 
              $ref: "#/definitions/discussionDiscussion"
        parameters: 
          - 
            name: "id"
            in: "path"
            required: true
            type: "string"
          - 
            name: "type"
            in: "query"
            required: false
            type: "string"
        tags: 
          - "DiscussionService"
    /discussion/version: 
      get: 
        operationId: "GetVersion"
        responses: 
          200: 
            description: ""
            schema: 
              $ref: "#/definitions/discussionVersion"
        tags: 
          - "DiscussionService"
    /discussion/{id}: 
      delete: 
        operationId: "DeleteDiscussion"
        responses: 
          200: 
            description: ""
            schema: 
              $ref: "#/definitions/protobufEmpty"
        parameters: 
          - 
            name: "id"
            in: "path"
            required: true
            type: "string"
        tags: 
          - "DiscussionService"
      put: 
        operationId: "UpdateDiscussion"
        responses: 
          200: 
            description: ""
            schema: 
              $ref: "#/definitions/discussionDiscussion"
        parameters: 
          - 
            name: "id"
            in: "path"
            required: true
            type: "string"
        tags: 
          - "DiscussionService"
    /horse/access: 
      get: 
        operationId: "ReadAllHorseSharings"
        responses: 
          200: 
            description: ""
            schema: 
              $ref: "#/definitions/horseHorseSharingList"
        tags: 
          - "HorseService"
      post: 
        operationId: "CreateHorseSharing"
        responses: 
          200: 
            description: ""
            schema: 
              $ref: "#/definitions/horseHorseSharing"
        parameters: 
          - 
            name: "body"
            in: "body"
            required: true
            schema: 
              $ref: "#/definitions/horseHorseSharingRequest"
        tags: 
          - "HorseService"
    /horse/access/horse/{horseID}: 
      get: 
        operationId: "ReadHorseSharingByHorseID"
        responses: 
          200: 
            description: ""
            schema: 
              $ref: "#/definitions/horseHorseSharingList"
        parameters: 
          - 
            name: "horseID"
            in: "path"
            required: true
            type: "string"
        tags: 
          - "HorseService"
    /horse/access/user/{userID}: 
      get: 
        operationId: "ReadHorseSharingByUserID"
        responses: 
          200: 
            description: ""
            schema: 
              $ref: "#/definitions/horseHorseSharingList"
        parameters: 
          - 
            name: "userID"
            in: "path"
            required: true
            type: "string"
        tags: 
          - "HorseService"
    /horse/access/{id}: 
      delete: 
        operationId: "DeleteHorseSharing"
        responses: 
          200: 
            description: ""
            schema: 
              $ref: "#/definitions/protobufEmpty"
        parameters: 
          - 
            name: "id"
            in: "path"
            required: true
            type: "string"
        tags: 
          - "HorseService"
    /horse/activities/{horseID}: 
      get: 
        operationId: "ReadActivities"
        responses: 
          200: 
            description: ""
            schema: 
              $ref: "#/definitions/horseActivityList"
        parameters: 
          - 
            name: "horseID"
            in: "path"
            required: true
            type: "string"
        tags: 
          - "HorseService"
    /horse/activity: 
      post: 
        operationId: "CreateActivity"
        responses: 
          200: 
            description: ""
            schema: 
              $ref: "#/definitions/horseActivity"
        parameters: 
          - 
            name: "body"
            in: "body"
            required: true
            schema: 
              $ref: "#/definitions/horseActivity"
        tags: 
          - "HorseService"
    /horse/activity/{id}: 
      get: 
        operationId: "ReadActivity"
        responses: 
          200: 
            description: ""
            schema: 
              $ref: "#/definitions/horseActivity"
        parameters: 
          - 
            name: "id"
            in: "path"
            required: true
            type: "string"
        tags: 
          - "HorseService"
      delete: 
        operationId: "DeleteActivity"
        responses: 
          200: 
            description: ""
            schema: 
              $ref: "#/definitions/protobufEmpty"
        parameters: 
          - 
            name: "id"
            in: "path"
            required: true
            type: "string"
        tags: 
          - "HorseService"
    /horse/create: 
      post: 
        operationId: "CreateHorse"
        responses: 
          200: 
            description: ""
            schema: 
              $ref: "#/definitions/horseHorse"
        parameters: 
          - 
            name: "body"
            in: "body"
            required: true
            schema: 
              $ref: "#/definitions/horseHorse"
        tags: 
          - "HorseService"
    /horse/fei/{id}: 
      get: 
        operationId: "GetHorseFromFEI"
        responses: 
          200: 
            description: ""
            schema: 
              $ref: "#/definitions/horseHorse"
        parameters: 
          - 
            name: "id"
            in: "path"
            required: true
            type: "string"
        tags: 
          - "HorseService"
    /horse/food/dosages: 
      post: 
        operationId: "EditFoodDosages"
        responses: 
          200: 
            description: ""
            schema: 
              $ref: "#/definitions/horseFoodDosages"
        parameters: 
          - 
            name: "body"
            in: "body"
            required: true
            schema: 
              $ref: "#/definitions/horseFoodDosages"
        tags: 
          - "HorseService"
    /horse/food/dosages/{id}: 
      get: 
        operationId: "GetFoodDosages"
        responses: 
          200: 
            description: ""
            schema: 
              $ref: "#/definitions/horseFoodDosages"
        parameters: 
          - 
            name: "id"
            in: "path"
            required: true
            type: "string"
        tags: 
          - "HorseService"
    /horse/id/{id}: 
      get: 
        operationId: "GetHorse"
        responses: 
          200: 
            description: ""
            schema: 
              $ref: "#/definitions/horseHorse"
        parameters: 
          - 
            name: "id"
            in: "path"
            required: true
            type: "string"
        tags: 
          - "HorseService"
    /horse/list/simple: 
      get: 
        operationId: "ListHorses"
        responses: 
          200: 
            description: ""
            schema: 
              $ref: "#/definitions/horseHorseList"
        tags: 
          - "HorseService"
    /horse/training/{id}: 
      get: 
        operationId: "GetTrainingByID"
        responses: 
          200: 
            description: ""
            schema: 
              $ref: "#/definitions/horseTraining"
        parameters: 
          - 
            name: "id"
            in: "path"
            required: true
            type: "string"
        tags: 
          - "HorseService"
    /horse/trainings: 
      get: 
        operationId: "ListTrainings"
        responses: 
          200: 
            description: ""
            schema: 
              $ref: "#/definitions/horseTrainingList"
        parameters: 
          - 
            name: "start"
            in: "query"
            required: false
            type: "string"
            format: "uint64"
          - 
            name: "number"
            in: "query"
            required: false
            type: "string"
            format: "uint64"
        tags: 
          - "HorseService"
    /horse/trainings/{id}: 
      delete: 
        operationId: "DeleteTraining"
        responses: 
          200: 
            description: ""
            schema: 
              $ref: "#/definitions/protobufEmpty"
        parameters: 
          - 
            name: "id"
            in: "path"
            required: true
            type: "string"
        tags: 
          - "HorseService"
      put: 
        operationId: "UpdateActivity"
        responses: 
          200: 
            description: ""
            schema: 
              $ref: "#/definitions/horseActivity"
        parameters: 
          - 
            name: "id"
            in: "path"
            required: true
            type: "string"
          - 
            name: "body"
            in: "body"
            required: true
            schema: 
              $ref: "#/definitions/horseActivity"
        tags: 
          - "HorseService"
    /horse/trainings/{id}/{type}/{graphType}: 
      get: 
        operationId: "GetTrainingData"
        responses: 
          200: 
            description: ""
            schema: 
              $ref: "#/definitions/horseTrainingDataList"
        parameters: 
          - 
            name: "id"
            in: "path"
            required: true
            type: "string"
          - 
            name: "type"
            in: "path"
            required: true
            type: "string"
          - 
            name: "graphType"
            in: "path"
            required: true
            type: "string"
        tags: 
          - "HorseService"
    /horse/update: 
      put: 
        operationId: "UpdateHorse"
        responses: 
          200: 
            description: ""
            schema: 
              $ref: "#/definitions/horseHorse"
        parameters: 
          - 
            name: "body"
            in: "body"
            required: true
            schema: 
              $ref: "#/definitions/horseHorse"
        tags: 
          - "HorseService"
    /horse/version: 
      get: 
        operationId: "GetVersion"
        responses: 
          200: 
            description: ""
            schema: 
              $ref: "#/definitions/horseVersion"
        tags: 
          - "HorseService"
    /horse/{horseID}/trainings: 
      post: 
        operationId: "CreateTraining"
        responses: 
          200: 
            description: ""
            schema: 
              $ref: "#/definitions/horseTraining"
        parameters: 
          - 
            name: "horseID"
            in: "path"
            required: true
            type: "string"
          - 
            name: "body"
            in: "body"
            required: true
            schema: 
              $ref: "#/definitions/horseTraining"
        tags: 
          - "HorseService"
    /horse/{id}: 
      delete: 
        operationId: "DeleteHorse"
        responses: 
          200: 
            description: ""
            schema: 
              $ref: "#/definitions/protobufEmpty"
        parameters: 
          - 
            name: "id"
            in: "path"
            required: true
            type: "string"
        tags: 
          - "HorseService"
    /horse/{id}/trainings: 
      get: 
        operationId: "GetTrainingsByHorseID"
        responses: 
          200: 
            description: ""
            schema: 
              $ref: "#/definitions/horseTrainingList"
        parameters: 
          - 
            name: "id"
            in: "path"
            required: true
            type: "string"
        tags: 
          - "HorseService"

